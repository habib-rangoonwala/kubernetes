########################################################
### Author: Habib Rangoonwala
### Created: 01-Aug-2016
### Updated: 25-Aug-2016
########################################################
################
### Volume 1 ###
################
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-data-rs0-1
spec:
  capacity:
    storage: 10G
  accessModes:
    - ReadWriteMany
  nfs:
    server: nfs-server|nfs-ip
    path: "mongodb-volume-for-rs0-1"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongodb-data-rs0-1
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10G
################
### Volume 2 ###
################
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-data-rs0-2
spec:
  capacity:
    storage: 10G
  accessModes:
    - ReadWriteMany
  nfs:
    server: nfs-server|nfs-ip
    path: "mongodb-volume-for-rs0-2"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongodb-data-rs0-2
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10G
################
### Volume 3 ###
################
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-data-rs0-3
spec:
  capacity:
    storage: 10G
  accessModes:
    - ReadWriteMany
  nfs:
    server: nfs-server|nfs-ip
    path: "mongodb-volume-for-rs0-3"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongodb-data-rs0-3
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10G
#############################################################################
### Service 0                                                             ###
# This service is used for MongoDB access outside of the kubernetes cluster #
#############################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-gw
  labels:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
spec:
  type: LoadBalancer
  ports:
  - name: mongo-port
    port: 27017
    targetPort: 27017
    nodePort: 30017
    protocol: TCP
  selector:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
#################
### Service 1 ###
#################
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-rs01
  labels:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
spec:
  type: LoadBalancer
  ports:
  - name: mongo-port
    port: 27017
    targetPort: 27017
    protocol: TCP
  selector:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
    name: dev-mongo-rc1
#################
### Service 2 ###
#################
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-rs02
  labels:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
spec:
  type: LoadBalancer
  ports:
  - name: mongo-port
    port: 27017
    targetPort: 27017
    protocol: TCP
  selector:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
    name: dev-mongo-rc2
#################
### Service 3 ###
#################
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc-rs03
  labels:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
spec:
  type: LoadBalancer
  ports:
  - name: mongo-port
    port: 27017
    targetPort: 27017
    protocol: TCP
  selector:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
    name: dev-mongo-rc3
###############################
### ReplicationController 1 ###
###############################
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: dev-mongo-rc1
  labels:
    name: dev-mongo-rc1
spec:
  replicas: 1
  selector:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
    name: dev-mongo-rc1
  template:
    metadata:
      labels:
        app: myapp
        databaseVendor: mongo
        instanceType: dev
        name: dev-mongo-rc1
        instance: dev-mongo
    spec:
      volumes:
      - name: mongodb-data-rs0-1
        persistentVolumeClaim:
          claimName: mongodb-data-rs0-1
      containers:
      - name: dev-mongo-rc1
        image: mongo
        command:
         - mongod
         - "--replSet"
         - rs0
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data-rs0-1
          mountPath: /data/db
###############################
### ReplicationController 2 ###
###############################
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: dev-mongo-rc2
  labels:
    name: dev-mongo-rc2
spec:
  replicas: 1
  selector:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
    name: dev-mongo-rc2
  template:
    metadata:
      labels:
        app: myapp
        databaseVendor: mongo
        instanceType: dev
        name: dev-mongo-rc2
        instance: dev-mongo
    spec:
      volumes:
      - name: mongodb-data-rs0-2
        persistentVolumeClaim:
          claimName: mongodb-data-rs0-2
      containers:
      - name: dev-mongo-rc2
        image: mongo
        command:
         - mongod
         - "--replSet"
         - rs0
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data-rs0-2
          mountPath: /data/db
###############################
### ReplicationController 3 ###
###############################
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: dev-mongo-rc3
  labels:
    name: dev-mongo-rc3
spec:
  replicas: 1
  selector:
    app: myapp
    databaseVendor: mongo
    instanceType: dev
    name: dev-mongo-rc3
  template:
    metadata:
      labels:
        app: myapp
        databaseVendor: mongo
        instanceType: dev
        name: dev-mongo-rc3
        instance: dev-mongo
    spec:
      volumes:
      - name: mongodb-data-rs0-3
        persistentVolumeClaim:
          claimName: mongodb-data-rs0-3
      containers:
      - name: dev-mongo-rc3
        image: mongo
        command:
         - mongod
         - "--replSet"
         - rs0
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data-rs0-3
          mountPath: /data/db
##############################################################################
### please run these MongoDB Commands to initiate a replicaset
### $ ./mongo machine:port
### > rs.initiate()
### conf=rs.conf()
### conf.members[0].host="mongo-svc-rs01:27017"
### rs.reconfig(conf)
### rs.add("mongo-svc-rs02:27017")
### rs.add("mongo-svc-rs03:27017")
### rs.status()
##############################################################################
